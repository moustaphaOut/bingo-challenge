{"version":3,"sources":["reportWebVitals.js","actions/type.js","reducers/gridReducer.js","reducers/combineReducers.js","store.js","components/SingleGrid.js","actions/gridActions.js","components/GridTable.js","components/Header.js","components/Instructions.js","components/Win.js","components/pages/Board.js","Routes.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GENERATE_GRID","UPDATE_GRID","CHECK_WIN","initalState","size","grid","updated","win","activeCell","rootReducer","combineReducers","gridReducer","state","action","type","payload","enhancers","compose","applyMiddleware","thunk","store","createStore","SingleGrid","props","role","className","pressed","id","index","tabIndex","onClick","switchValue","value","genetareGrid","dispatch","generateRandomGrid","commonPhrases","center","changeValue","row","col","values","randomizedValues","array","i","length","j","Math","floor","random","shuffleArray","GridTable","useDispatch","useSelector","useEffect","map","totalSize","phrase","uuid","Header","Instructions","to","target","Win","Board","useSpeechRecognition","continuous","language","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","SpeechRecognition","startListening","activeRow","activeCol","checkRow","checkCol","checkDiagonaLeft","checkDiagonaRight","checkWin","voicePhrase","cell","replace","toLowerCase","match","matchVoice","style","textAlign","stopListening","Routes","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a3bff1c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nexport const GENERATE_GRID = \"GENERATE_GRID\"\r\nexport const UPDATE_GRID = \"UPDATE_GRID\"\r\nexport const CHECK_WIN = \"CHECK_WIN\"\r\n","import { CHECK_WIN, GENERATE_GRID, UPDATE_GRID } from \"../actions/type\";\n\nconst initalState = {\n  size: 5,\n  grid: [],\n  updated: false,\n  win: false,\n  activeCell:null, //row, col\n};\n\nexport let gridReducer = (state = initalState, action) => {\n  switch (action.type) {\n    case GENERATE_GRID:\n      return {\n        ...state,\n        grid: action.payload[0],\n        size: action.payload[1],\n        activeCell: action.payload[2],\n        win: false,\n      };\n    case UPDATE_GRID:\n      return {\n        ...state,\n        grid: action.payload[0],\n        updated: action.payload[1],\n        activeCell: action.payload[2],\n      };\n    case CHECK_WIN:\n      return {\n        ...state,\n        win: action.payload,\n      };\n    default: {\n      return state;\n    }\n  }\n};\n","import {combineReducers} from 'redux'\r\nimport { gridReducer } from './gridReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    gridReducer: gridReducer,\r\n})\r\n\r\nexport default rootReducer","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport rootReducer from './reducers/combineReducers';\r\n//thunk => midel de redux pour reagir avec l'exterieur\r\nimport thunk from \"redux-thunk\"\r\n\r\n// for this we'll use Redux \"compose\" function\r\nconst enhancers = compose(\r\n    applyMiddleware(thunk), // your own middleware\r\n    // window.devToolsExtension ? window._REDUX_DEVTOOLS_EXTENSION_() : (f) => f\r\n);// devtools middleware\r\n\r\nexport let store = createStore(rootReducer, enhancers);","import React from \"react\";\r\n\r\nconst SingleGrid = (props) => {\r\n  return (\r\n    <td role=\"gridcell\">\r\n      <div className=\"cell-contents\">\r\n        <button\r\n          aria-pressed={props.pressed}\r\n          className=\"cell-toggle\"\r\n          id={`abc-cell-${props.index}`}\r\n          tabIndex={-1}\r\n          onClick={props.switchValue}\r\n        >\r\n          {props.value}\r\n        </button>\r\n      </div>\r\n    </td>\r\n  );\r\n};\r\n\r\nexport default SingleGrid;\r\n","import { CHECK_WIN, GENERATE_GRID, UPDATE_GRID } from \"./type\";\n\nexport const checkWin = (grid, size, activeCell) => (dispatch) => {\n  const [activeRow, activeCol] = activeCell;\n  let win = false;\n  if (\n    checkRow(grid[activeRow]) ||\n    checkCol(grid, activeCol, size) ||\n    checkDiagonaLeft(grid, size, activeRow, activeCol) ||\n    checkDiagonaRight(grid, size, activeRow, activeCol)\n  )\n    win = true;\n\n  dispatch({\n    type: CHECK_WIN,\n    payload: win,\n  });\n};\n\nfunction checkRow(row) {\n  if (!row) return false;\n\n  for (let i = 0; i < row.length; i++) if (!row[i].pressed) return false;\n\n  return true;\n}\n\nfunction checkCol(grid, activeCol, size) {\n  if (!grid[activeCol]) return false;\n\n  for (let i = 0; i < size; i++) if (!grid[i][activeCol].pressed) return false;\n\n  return true;\n}\n\nfunction checkDiagonaLeft(grid, size, activeRow, activeCol) {\n  if (activeRow !== activeCol) return false;\n  else for (let i = 0; i < size; i++) if (!grid[i][i].pressed) return false;\n\n  return true;\n}\nfunction checkDiagonaRight(grid, size) {\n  for (let i = 0; i < size; i++)\n    if (!grid[i][size - 1 - i].pressed) return false;\n\n  return true;\n}\n\nexport const matchVoice = (grid, voicePhrase, updated) => (dispatch) => {\n  for (let i = 0; i < grid.length; i++) {\n    const row = grid[i];\n    for (let j = 0; j < row.length; j++) {\n      const cell = row[j];\n      if (\n        cell.value\n          .replace(/[^a-zA-Z ]/g, \"\")\n          .toLowerCase()\n          .match(voicePhrase) ||\n        voicePhrase.match(cell.value.replace(/[^a-zA-Z ]/g, \"\").toLowerCase())\n      )\n        return dispatch(changeValue(grid, updated, cell.row, cell.col));\n    }\n  }\n};\n\nexport const genetareGrid = (size) => (dispatch) => {\n  let grid = generateRandomGrid(commonPhrases, size);\n  const center = (size % 2 ? (size + 1) / 2 : size / 2) - 1;\n  grid[center][center].pressed = true;\n  dispatch({\n    type: GENERATE_GRID,\n    payload: [grid, size, [center, center]],\n  });\n};\n\nexport const changeValue = (grid, updated, row, col) => (dispatch) => {\n  grid[row][col].pressed = !grid[row][col].pressed;\n\n  dispatch({\n    type: UPDATE_GRID,\n    payload: [grid, updated, [row, col]],\n  });\n};\n\n/* https://stackoverflow.com/a/12646864 */\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array;\n}\n\nconst generateRandomGrid = (values, size) => {\n  const randomizedValues = shuffleArray(values);\n\n  let grid = [];\n  for (let row = 0; row < size; row++) {\n    grid[row] = [];\n    for (let col = 0; col < size; col++) {\n      let id = col + row * size;\n      grid[row][col] = {\n        value: randomizedValues[id],\n        id: id,\n        pressed: false,\n        col: col,\n        row: row,\n      };\n    }\n  }\n\n  return grid;\n};\n\nlet commonPhrases = [\n  \"Sorry, I couldn't log in\",\n  \"I had connection issues\",\n  \" Hello, are you there?\",\n  \"We can see you, but we can't hear you.\",\n  \"You're on mute!\",\n  \"Can you unmute your microphone?\",\n  \"Could you turn your video on?\",\n  \" Can you hear me now?\",\n  \"Can you see me now?\",\n  \"Sorry, I didn't catch that, the connection is bad.\",\n  \"Could you repeat that, you're breaking up a bit.\",\n  \"You've frozen.\",\n  \"Oh dear, we've lost you!\",\n  \"Could you write that in the chat box please?\",\n  \"Well, I think – sorry, go ahead…\",\n  \"Welcome to the conference call…\",\n  \"Is everyone ready to start?\",\n  \"Shall we start?\",\n  \"As you know, today we are discussing X…\",\n  \"Did everyone receive the agenda? / Has everyone received the agenda?\",\n  \"I’m sharing my screen, can everyone see it?\",\n  \"I’m uploading the document now, can you see it?\",\n  \"So the agreed action points are X, Y, Z.\",\n  \"Is there anything else to discuss?\",\n  \"I’ll confirm our discussion by email.\",\n  \"Let’s finish / close the call, thank you everyone.\",\n];\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SingleGrid from \"./SingleGrid\";\r\nimport { changeValue } from \"../actions/gridActions\";\r\nimport { uuid } from \"uuidv4\";\r\n\r\nconst GridTable = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const grid = useSelector((state) => state.gridReducer.grid);\r\n  const updated = useSelector((state) => state.gridReducer.updated);\r\n  const win = useSelector((state) => state.gridReducer.win);\r\n\r\n  useEffect(() => {}, [updated]);\r\n\r\n  return (\r\n    <table role=\"grid\" className=\"maxw-95\">\r\n      <tbody>\r\n        {grid &&\r\n          grid.map((row) => {\r\n            let size = row.length;\r\n            let totalSize = size % 2 === 0 ? size * size : size * size + 1;\r\n            return (\r\n              <tr role=\"row\" key={uuid()}>\r\n                {row &&\r\n                  row.map((phrase) => {\r\n                    if (phrase.id + 1 === totalSize / 2)\r\n                      //commonPhrases.length / 2\r\n                      return (\r\n                        <SingleGrid\r\n                          value={win ? \"BINGO 🎉\" : \"Listening...\"}\r\n                          index={phrase.id}\r\n                          key={phrase.id}\r\n                          pressed={true}\r\n                        />\r\n                      );\r\n                    return (\r\n                      <SingleGrid\r\n                        value={phrase.value}\r\n                        index={phrase.id}\r\n                        key={phrase.id}\r\n                        pressed={phrase.pressed}\r\n                        switchValue={() => {\r\n                          dispatch(\r\n                            changeValue(grid, !updated, phrase.row, phrase.col)\r\n                          );\r\n                        }}\r\n                      />\r\n                    );\r\n                  })}\r\n              </tr>\r\n            );\r\n          })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default GridTable;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { genetareGrid } from \"../actions/gridActions\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const size = useSelector((state) => state.gridReducer.size);\r\n\r\n  return (\r\n    <header className=\"flex justify-between items-end bb-5 pv-1\">\r\n      <h1 className=\"ma2 f1-ns f2-m f3\">Bingo Challenge</h1>\r\n      <button\r\n        onClick={() => dispatch(genetareGrid(size))}\r\n        className=\"tc fw8 bg-white black pa3 ba bw1 b--black mb2\"\r\n      >\r\n        New Board\r\n      </button>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Instructions = () => {\r\n  return (\r\n    <aside className=\"maxw-95 instructions\" aria-label=\"Instructions\">\r\n      <h2 className=\"pv2 bb-3\">Instructions</h2>\r\n      <h3>The Basics</h3>\r\n      <ul>\r\n        <li>Press tiles as phrases come up or just turn on your microphone.</li>\r\n        <li>\r\n          <strong>5 in a row is bingo!</strong>\r\n        </li>\r\n      </ul>\r\n      <h3>Got Bingo?</h3>\r\n      <p> Congrats! Feel free to...</p>\r\n      <ul>\r\n        <li>Continue filling in your board</li>\r\n        <li>Start a new board!</li>\r\n      </ul>\r\n      <p>\r\n        Created by <Link to=\"https://www.eloutmani.com\" target=\"_blank\">El Outmani</Link>\r\n      </p>\r\n      <small>\r\n        Design Credit by{\" \"}\r\n        <Link to=\"https://www.24a11y.com/2019/building-an-accessible-bingo-web-app/\" target=\"_blank\">\r\n          Cordelia\r\n        </Link>\r\n      </small>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Instructions;\r\n","import React from \"react\";\r\n\r\nconst Win = () => {\r\n  return (\r\n    <div className=\"items-center justify-between\">\r\n      <div className=\"w-50-l w-100 tc tl-l\" role=\"alert\" aria-live=\"assertive\">\r\n        <span className=\"f2 fw8\">\r\n          You got bingo!\r\n          <span role=\"img\" aria-label=\"Hurray!\">\r\n            🎉\r\n          </span>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Win;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport GridTable from \"../GridTable\";\r\nimport Header from \"../Header\";\r\nimport Instructions from \"../Instructions\";\r\nimport Win from \"../Win\";\r\nimport { checkWin, genetareGrid, matchVoice } from \"../../actions/gridActions\";\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\n\r\nconst Board = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    transcript,\r\n    listening,\r\n    resetTranscript,\r\n    browserSupportsSpeechRecognition,\r\n  } = useSpeechRecognition({ continuous: true, language: \"en-US\" });\r\n\r\n  const win = useSelector((state) => state.gridReducer.win);\r\n  const grid = useSelector((state) => state.gridReducer.grid);\r\n  const size = useSelector((state) => state.gridReducer.size);\r\n  const updated = useSelector((state) => state.gridReducer.updated);\r\n  const activeCell = useSelector((state) => state.gridReducer.activeCell);\r\n\r\n  useEffect(() => {\r\n    SpeechRecognition.startListening({ continuous: true, language: \"en-US\" });\r\n    dispatch(genetareGrid(size));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    resetTranscript();\r\n    if (grid && grid[0]) dispatch(checkWin(grid, size, activeCell));\r\n  }, [updated]);\r\n\r\n  useEffect(() => {\r\n    if (transcript.length > 12) {\r\n      dispatch(\r\n        matchVoice(\r\n          grid,\r\n          transcript.replace(/[^a-zA-Z ]/g, \"\").toLowerCase(),\r\n          !updated\r\n        )\r\n      );\r\n    }\r\n  }, [transcript.length]);\r\n\r\n  return (\r\n    <div style={{ textAlign: \"-webkit-center\" }}>\r\n      <Header />\r\n      {browserSupportsSpeechRecognition ? (\r\n        <div className=\"\">\r\n          <p>Microphone: {listening ? \"on\" : \"off\"}</p>\r\n          <button onClick={SpeechRecognition.startListening}>Start</button>\r\n          <button onClick={SpeechRecognition.stopListening}>Stop</button>\r\n          <button onClick={resetTranscript}>Reset</button>\r\n          <p>{transcript}</p>\r\n        </div>\r\n      ) : (\r\n        <span>Browser doesn't support speech recognition.</span>\r\n      )}\r\n\r\n      <main>\r\n        <GridTable />\r\n        {win ? <Win /> : null}\r\n      </main>\r\n      <Instructions />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Board from \"./components/pages/Board\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Board} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport Routes from './Routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Routes />\n     </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}